buildscript {
  repositories {
    mavenCentral()
    jcenter() // gradle-versions-plugin
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    classpath 'io.fabric.tools:gradle:1.21.2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$deps.kotlin"
    classpath "org.jetbrains.kotlin:kotlin-android-extensions:$deps.kotlin"
  }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'

def appId = "com.makingiants.todayhistory"
def appVersionName = "0.1.0"
def appVersionCode = 1

def gitSha() {
  'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
}

android {
  compileSdkVersion setup.targetSdk
  buildToolsVersion setup.buildTools

  defaultConfig {
    applicationId appId
    minSdkVersion setup.minSdk
    targetSdkVersion setup.targetSdk
    versionCode appVersionCode
    versionName appVersionName

    // Add version and build number to apk name
    setProperty("archivesBaseName", "today-${appVersionName}-${appVersionCode}")

    buildConfigField "String", "HOST", "\"http://day-in-history.herokuapp.com\""
    buildConfigField "String", "GIT_SHA", "\"STATIC_FOR_PERFORMANCE\""
    buildConfigField "boolean", "ANALYTICS_ENABLED", "false"

    resValue "string", "ads_unit_id_banner", "${TODAY_ADS_UNIT_ID_BANNER}"
  }
  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
      buildConfigField "boolean", "ANALYTICS_ENABLED", "true"
    }
  }

  productFlavors {
    prod
    mocked
  }
  testOptions {
    unitTests.all {
      jvmArgs "-XX:MaxPermSize=2048m"

      beforeTest { descriptor -> logger.lifecycle("Running test: " + descriptor)
      }
    }
  }

  lintOptions {
    fatal 'UnusedResources'
    abortOnError false
  }

  // Kotlin
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    prod.java.srcDirs += 'src/prod/kotlin'
    mocked.java.srcDirs += 'src/mocked/kotlin'
  }
}

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

dependencies {
  // Base
  compile "com.android.support:appcompat-v7:$deps.supportLib"
  compile "com.android.support:design:$deps.supportLib"
  compile "com.android.support:cardview-v7:$deps.supportLib"
  compile "com.android.support:palette-v7:$deps.supportLib"
  compile "com.google.android.gms:play-services-ads:${deps.playServices}"
  compile "org.jetbrains.kotlin:kotlin-stdlib:$deps.kotlin"

  compile project(':api')
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.github.florent37:picassopalette:1.0.2@aar'

  // Management
  compile 'com.jakewharton.timber:timber:4.1.0@aar'
  compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') { transitive = true; }

  testCompile "org.jetbrains.kotlin:kotlin-test:$deps.kotlin"
  testCompile 'junit:junit:4.12'
  testCompile "org.mockito:mockito-core:1.10.19"
  testCompile('com.squareup.assertj:assertj-android:1.1.1') {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
}